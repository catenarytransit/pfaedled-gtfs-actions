name: Update Pfaedle files Luxembourg

on:
  workflow_call:

jobs:
  upload-release-asset:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download unzip and zip
        run: sudo apt install unzip zip

      - name: Install OSM tools
        run: sudo apt install osmium-tool osmctools

      - name: Build Pfaedle
        run: |
          if ! command -v pfaedle &> /dev/null; then
            git clone --recurse-submodules https://github.com/ad-freiburg/pfaedle
            cd pfaedle
            mkdir build && cd build
            cmake ..
            make -j
            sudo make install
            cd ..
          else
            echo "Pfaedle is already installed."
          fi

      - name: Download osm files
        run: |
          wget https://github.com/catenarytransit/osm-filter/releases/download/latest/railonly-europe-latest.osm.pbf
          wget https://download.geofabrik.de/europe/luxembourg-latest.osm.pbf

      - name: Convert OSM files
        run: |
          osmconvert railonly-europe-latest.osm.pbf -o=railonly-europe-latest.osm
          osmconvert luxembourg-latest.osm.pbf -o=luxembourg-latest.osm

      - name: Download Luxembourg GTFS
        id: download_lux_gtfs
        run: |
          wget https://data.public.lu/fr/datasets/r/6e08f8c0-00d7-4e0f-904c-0f04c636f95c -O lux_gtfs.zip
          echo "LUX_GTFS_FILE=lux_gtfs.zip" >> $GITHUB_OUTPUT

      - name: Calculate Luxembourg GTFS MD5 Hash
        id: calculate_lux_gtfs_md5
        run: |
          filepath="${{ steps.download_lux_gtfs.outputs.LUX_GTFS_FILE }}"
          md5_hash=$(md5sum "$filepath" | awk '{print $1}')
          echo "LUX_GTFS_MD5=$md5_hash" >> $GITHUB_OUTPUT
          echo "LUX_GTFS_MD5_FILE=$filepath.md5" >> $GITHUB_OUTPUT
          echo "$md5_hash" > "$filepath.md5"

      - name: Download Existing Luxembourg GTFS MD5 Hash
        id: download_existing_lux_gtfs_md5
        run: |
          ASSET_NAME="${{ steps.download_lux_gtfs.outputs.LUX_GTFS_FILE }}"
          MD5_ASSET_NAME="${ASSET_NAME}.md5"
          RELEASE_TAG="latest"
          RELEASE_URL="https://github.com/${{ github.repository }}/releases/download/${RELEASE_TAG}/${MD5_ASSET_NAME}"
          if wget --spider --quiet "$RELEASE_URL"; then
            echo "LUX_GTFS_MD5_EXISTS=true" >> $GITHUB_OUTPUT
            wget --quiet -O existing_lux_gtfs_md5.txt "$RELEASE_URL"
            EXISTING_LUX_GTFS_MD5=$(cat existing_lux_gtfs_md5.txt)
            echo "EXISTING_LUX_GTFS_MD5=$EXISTING_LUX_GTFS_MD5" >> $GITHUB_OUTPUT
          else
            echo "LUX_GTFS_MD5_EXISTS=false" >> $GITHUB_OUTPUT
          fi

      - name: Run Pfaedle and Zip (Conditional)
        if: steps.download_existing_lux_gtfs_md5.outputs.LUX_GTFS_MD5_EXISTS == 'false' || steps.calculate_lux_gtfs_md5.outputs.LUX_GTFS_MD5 != steps.download_existing_lux_gtfs_md5.outputs.EXISTING_LUX_GTFS_MD5
        run: |
          # Unzip Luxembourg GTFS
          unzip lux_gtfs.zip -d lux_gtfs

          # Run Pfaedle Luxembourg Bus network
          pfaedle -x luxembourg-latest.osm lux_gtfs -F --inplace --mots bus,trolley-bus,trolleybus,trolley,ferry --write-colors

          # Run Pfaedle Luxembourg Rail network
          pfaedle -x railonly-europe-latest.osm lux_gtfs -F --inplace --mots rail,metro,subway,tram,streetcar --write-colors

          # Zip lux gtfs
          zip -r -9 lux_gtfs_pfaedle.zip lux_gtfs/*
        id: run_pfaedle_zip

      - name: Upload Assets Luxembourg GTFS
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ github.token }}
          ASSET_PATH: lux_gtfs_pfaedle.zip
          MD5_ASSET_PATH: ${{ steps.calculate_lux_gtfs_md5.outputs.LUX_GTFS_MD5_FILE }}
          RELEASE_TAG: latest
        run: |
          NEW_MD5="${{ steps.calculate_lux_gtfs_md5.outputs.LUX_GTFS_MD5 }}"
          MD5_EXISTS="${{ steps.download_existing_lux_gtfs_md5.outputs.LUX_GTFS_MD5_EXISTS }}"
          EXISTING_MD5="${{ steps.download_existing_lux_gtfs_md5.outputs.EXISTING_LUX_GTFS_MD5 }}"
          ASSET_TO_UPLOAD="${{ steps.run_pfaedle_zip.outputs.result == 'success' && steps.run_pfaedle_zip.outcome == 'success' }}"

          if [[ "$MD5_EXISTS" == "false" ]]; then
            echo "No existing MD5 found for Luxembourg GTFS. Uploading both file and MD5."
            if [[ -f "$ASSET_PATH" ]]; then
              gh release upload "$RELEASE_TAG" "$ASSET_PATH" --clobber
            else
              echo "Pfaedle and zip were skipped, not uploading main asset."
            fi
            gh release upload "$RELEASE_TAG" "$MD5_ASSET_PATH" --clobber
          elif [[ "$NEW_MD5" != "$EXISTING_MD5" ]]; then
            echo "Existing MD5 for Luxembourg GTFS is different. Uploading both file and new MD5."
            if [[ -f "$ASSET_PATH" ]]; then
              gh release upload "$RELEASE_TAG" "$ASSET_PATH" --clobber
            else
              echo "Pfaedle and zip were skipped, not uploading main asset."
            fi
            gh release upload "$RELEASE_TAG" "$MD5_ASSET_PATH" --clobber
          else
            echo "Existing MD5 for Luxembourg GTFS matches the new MD5. Skipping upload."
          fi
        shell: bash